{"version":3,"sources":["components/Person.js","components/Persons.js","components/Filter.js","components/Input.js","components/PersonForm.js","components/Notification.js","services/phoneService.js","App.js","index.js"],"names":["Person","person","deletePerson","className","name","number","onClick","id","Persons","persons","map","Filter","text","handle","type","onChange","Input","inputText","inputValue","inputHandle","value","PersonForm","handleSubmit","handleNameChange","handleNumChange","newName","newNum","onSubmit","Notification","msg","setMsg","notify","err","seconds","length","copiedTimer","setInterval","clearInterval","url","contactServices","getContacts","axios","get","then","response","data","addContact","newObj","post","updateContact","put","deleteContact","delete","catch","error","App","useState","setPersons","setNewName","setNewNum","filterPersons","setFiltered","useEffect","phoneService","contacts","e","search","target","toLowerCase","filtered","filter","includes","preventDefault","newPerson","names","nameSet","Set","nameArr","Array","from","duplicatePerson","find","window","confirm","num","findPerson","updatedPerson","contact","updatePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af83001d.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../index.css'\r\nconst Person = ({ person,deletePerson }) => {\r\n  return ((<div className = \"contact-name\">  \r\n  <h4>{person.name} {person.number}</h4>\r\n  <button onClick = {() => deletePerson(person.id,person.name)}>delete</button>\r\n</div>))\r\n}\r\n\r\n\r\nexport default Person","import React from 'react'\r\n\r\nimport Person from './Person'\r\n\r\nconst Persons = ({persons,deletePerson}) => (<div>\r\n   {persons.map(person => <div key={person.name}>{<Person person={person} deletePerson={ deletePerson}/>}</div>)}\r\n</div>)\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = ({ text, handle }) => (<div>\r\n  { text}<input type=\"text\" onChange={handle}/>\r\n</div>)\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Input = ({inputText,inputValue,inputHandle}) => (<div>{inputText}: <input type='text' value={inputValue} onChange={inputHandle} /></div>)\r\n\r\nexport default Input","import React from \"react\";\r\nimport Input from \"./Input\";\r\nimport '../index.css'\r\nconst PersonForm = ({handleSubmit,handleNameChange,handleNumChange,newName,newNum}) => (\r\n  <form onSubmit={handleSubmit} className = \"contact-form\">\r\n    <Input inputText=\"name\" inputValue={newName} inputHandle={ handleNameChange}/>\r\n    <Input inputText=\"number\" inputValue={newNum} inputHandle={ handleNumChange}/>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n)\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Notification = ({ msg, setMsg }) => {\r\n  let{notify,err} = msg\r\n  let seconds = notify.length > 0 ? 4 : 10\r\n        let copiedTimer = setInterval(() =>{   \r\n        seconds -= 1;\r\n          if(seconds <= 0){\r\n            clearInterval(copiedTimer);\r\n            notify.length > 0 ? setMsg({...msg,notify:''}) : setMsg({...msg,err:''})\r\n          }\r\n        }, 1000);\r\n    return(<div className = {notify.length > 0 ? \"notify\" : \"error\"}>{notify.length > 0 ? notify : err}</div>)\r\n\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\n\r\nconst url = '/api/persons'\r\n\r\nconst getContacts = () => axios.get(url).then(response => response.data)\r\nconst addContact = (newObj) => axios.post(url, newObj).then(response => response.data)\r\n\r\nconst updateContact = (id,newObj) => axios.put(`${url}/${id}`,newObj).then(response => response.data)\r\n\r\nconst deleteContact = (id) => axios.delete(`${url}/${id}`).then(response => response.data).catch(error => {\r\n  return 'Person already deleted'\r\n})\r\n\r\nconst contactServices = { getContacts, addContact, updateContact, deleteContact }\r\n\r\nexport default contactServices","import React, { useEffect, useState } from 'react'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport './index.css'\nimport phoneService from './services/phoneService'\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [newNum, setNewNum] = useState('')\n  const [msg, setMsg] = useState({notify : '',err : ''})\n  const [filterPersons, setFiltered] = useState([...persons])\n  const handleNameChange = (e) => {\n    setNewName(e.target.value)\n  }\n  const handleNumChange = (e) => {\n    setNewNum(e.target.value)\n  }\n  const handleFilter = (e) => {\n    let search = e.target.value.toLowerCase()\n    const filtered = persons.filter(person => person.name.toLowerCase().includes(search))\n    setFiltered(filtered)\n  }\n  \n  const updatePerson = (id, num) => {\n    const findPerson = filterPersons.find(person => person.id === id)\n    const updatedPerson = { ...findPerson, number: num }\n    phoneService.updateContact(id, updatedPerson).then(contact => {\n      setFiltered(filterPersons.map(person => person.id !== id ? person : contact))\n      setPersons(persons.map(person => person.id!==id ? person : contact))\n    })\n\n  }\n\n  const addPerson = (e) => {\n    e.preventDefault()\n    const newPerson = {name : newName, number : newNum}\n    const allPersons = [...filterPersons,newPerson]\n    const names = allPersons.map(person => person.name)\n    const nameSet = new Set(names)\n    const nameArr = Array.from(nameSet)\n    if (names.length !== nameArr.length) {\n      const duplicatePerson = filterPersons.find(person => person.name === newName)\n      if (window.confirm(`${newName} already added to phonebook,replace the old number with the new one?`)) {\n        updatePerson(duplicatePerson.id, newNum)\n        setMsg({...msg,notify :`${newName} has been updated Successfully`})\n      }\n\n    }\n    else {\n      phoneService.addContact(newPerson).then(contact => {\n        setFiltered([...filterPersons,contact])\n        setPersons([...persons, contact])\n        setMsg({...msg,notify :`${newName} added successfully`})\n      })\n    }\n    setNewName('')\n    setNewNum('')\n  }\n  const deletePerson = (id, name) => {\n    if (window.confirm(`Delete ${name}`)) {\n      phoneService.deleteContact(id).then(contact => {\n        if (contact === 'Person already deleted') {\n          setMsg({...msg,err : `${name} has already been deleted from the server`})\n        }\n        else {\n        setFiltered(filterPersons.filter(person => person.id !== id))\n        setPersons(persons.filter(person => person.id !== id))\n        setMsg({...msg,notify : `${name} deleted successfully`})\n        }\n\n      })\n    }\n  }\n  useEffect(() => {\n    phoneService.getContacts().then(contacts => {\n      setPersons(contacts)\n      setFiltered(contacts)\n    })\n  }, [])\n\n  return (\n    <div className = \"container\">\n      <div className = \"contact-info\">\n           <h2>Phonebook</h2>\n      {msg.notify.length > 0 || msg.err.length > 0 ? <Notification msg={msg} setMsg={setMsg} /> : ''}\n      <Filter text=\"filter shown with : \" handle={handleFilter} />\n      <h3>add a new contact</h3>\n      <PersonForm handleSubmit={addPerson} newName={newName} newNum={newNum} handleNameChange={handleNameChange} handleNumChange={ handleNumChange}/>\n      <h3>Numbers</h3>\n      <Persons persons={filterPersons} deletePerson={deletePerson} />\n    </div>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}